% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/UNIX_time.R
\name{UNIX_time}
\alias{UNIX_time}
\title{Writes and returns the UNIX_time file of an event.}
\usage{
UNIX_time(
  event,
  file = FALSE,
  var = "all",
  t = "all",
  fresh = FALSE,
  allow.old = FALSE,
  recursive = TRUE,
  saveData = FALSE,
  cores = 1
)
}
\arguments{
\item{event}{is a string or vector of strings representing the path to the files or the directory from which to obtain the UNIX_time information, either by reading the UNIX_time file or by generating new information.}

\item{file}{has one of three values: (1) The path to the file to which the UNIX time information should be written. (2) NULL/""/TRUE indicating the default file "UNIX_time.tsd". (3) FALSE, indicating that the file will not be written even though it would appear to be missing.}

\item{var}{is a vector of the variable names of the variables to return. Available variables are "f000", "i000", "l000", "n000" and "r000".}

\item{t}{is a vector of the time steps to return, which in this function corresponds to the files, as listed alphabetically (as returned from list.files(), with recursive=TURE)}

\item{fresh}{is TRUE to force creating new UNIX time information.}

\item{allow.old}{is a TRUE if old UNIX_time file is accepted (still with the correct list of files).}

\item{recursive}{is FALSE to only consider files in the root tsd directory (used in files_caseInsensitive()).}

\item{saveData}{is TRUE to save the UNIX_time info in memory for use later in the code (only recommended for events with a very high number of files).}

\item{cores}{is the number of cores for parallel reading of the TSD files.}
}
\description{
Writes and returns the UNIX_time file of an event.
}
\examples{
\dontrun{}

}
